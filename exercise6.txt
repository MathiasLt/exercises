(USE college)

SELECT stdFirstName, stdLastName, stdCity, stdGPA FROM student WHERE stdGPA >= 3.70;
#	stdFirstName	stdLastName	stdCity		stdGPA
	CRISTOPHER	COLAN		SEATTLE		4.00
	WILLIAM		PILGRIM		BOTHELL		3.80

SELECT FacFirstName, FacLastName, FacHireDate FROM faculty HAVING YEAR(FacHireDate) = 1999 OR YEAR(FacHireDate) = 2000;
#	FacFirstName	FacLastName	FacHireDate
	CRISTOPHER	COLAN		1999-03-01
	JULIA		MILLS		2000-03-15

SELECT OfferNo, CourseNo, FacSSN FROM offering WHERE OffTerm = 'FALL' OR OffTerm = 'WINTER';
#	OfferNo	CourseNo	FacSSN
	1234	IS320		098-76-5432
	4321	IS320		098-76-5432
	4444	IS320		543-21-0987
	5555	FIN300		765-43-2109
	5678	IS480		987-65-4321
	6666	FIN450		987-65-4321

SELECT offering.OfferNo, offering.CourseNo, offering.OffDays, offering.OffTime FROM offering JOIN course ON offering.CourseNo = course.CourseNo WHERE course.crsDesc LIKE '%database%' OR course.crsDesc LIKE '%programming%';
#	OfferNo	CourseNo	OffDays	OffTime
	3333	IS320		MW	08:30:00
	5679	IS480		TTH	15:30:00

SELECT * FROM offering JOIN faculty ON offering.FacSSN = faculty.FacSSN WHERE offering.CourseNo LIKE 'IS%' AND offering.OffTerm = 'FALL' AND Offyear = 2005 AND faculty.FacRank = 'ASST';
#	# offerNo	CourseNo	FacFirstName	FacLastName
	1234		IS320		LEONARD		VINCE
	4321		IS320		LEONARD		VINCE

SELECT avg(stdGPA) AS Summary FROM student GROUP  BY stdMajor;
#	Summary
	3.400000
	2.800000
	3.233333

SELECT OffYear, count(OfferNo) AS 'number of offerings', count(distinct(CourseNo)) AS 'number of courses' FROM offering GROUP BY OffYear DESC;
#	OffYear	number of offerings	number of courses
	2006		10			6
	2005		3			2

SELECT stdMajor, avg(stdGPA) AS 'average' FROM student WHERE stdClass = 'JR' OR stdClass = 'SR' GROUP BY stdMajor HAVING average > 3.1;
#	stdMajor	average
	ACCT		3.500000
	IS		3.150000

SELECT stdMajor, stdClass, min(stdGPA) AS min, max(stdGPA) AS max FROM student GROUP BY stdMajor, stdClass;
#	stdMajor	stdClass	min	max
	ACCT		JR		3.50	3.50
	ACCT		SO		3.30	3.30
	FIN		JR		2.50	2.70
	FIN		SR		3.20	3.20
	IS		FR		3.00	3.00
	IS		JR		3.60	3.60
	IS		SO		3.80	3.80
	IS		SR		2.20	4.00

SELECT crsDesc, count(*) FROM course JOIN offering ON course.CourseNo = offering.CourseNo WHERE course.CourseNo LIKE 'IS%' GROUP BY crsDesc;
#	crsDesc					count(*)
	FUNDAMENTALS OF BUSINESS PROGRAMMING	6
	FUNDAMENTALS OF DATABASE MANAGEMENT	2
	SYSTEMS ANALYSIS			2

SELECT stdGPA, CONCAT(stdFirstName, " ", stdLastName) AS stdName , stdCity, stdState FROM student WHERE stdClass = 'JR'ORDER BY stdGPA ASC;
#	# stdGPA  stdName	   stdCity  stdState
	2.50	  ROBERTO MORALES  SEATTLE  WA
	2.70	  BOB NORBERT	   BOTHELL  WA
	3.50	  CANDY KENDALL	   TACOMA   WA
	3.60      MARIAH DODGE	   SEATTLE  WA

SELECT DISTINCT(CONCAT(FacCity, " ", FacState)) AS UniCityState FROM faculty
#	UniCityState
	SEATTLE WA
	BOTHELL WA
	BELLEVUE WA

SELECT CONCAT(stdFirstName, " ", stdLastName) AS stdName FROM student JOIN enrollment ON student.stdSSN = enrollment.StdSSN WHERE EnrGrade >=3.5 GROUP BY stdName;
#	stdName
	BOB NORBERT
	CANDY KENDALL
	HOMER WELLS
	LUKE BRAZZI
	MARIAH DODGE
	ROBERTO MORALES
	WILLIAM PILGRIM

SELECT offering.OfferNo, offering.CourseNo, offering.OffDays, offering.OffLocation, offering.OffTime, CONCAT(faculty.FacFirstName, " ", faculty.FacLastName) AS FacName FROM faculty JOIN offering ON faculty.FacSSN = offering.FacSSN JOIN enrollment ON offering.OfferNo = enrollment.OfferNo JOIN student ON enrollment.StdSSN = student.stdSSN WHERE student.stdFirstName = 'Bob' AND student.stdLastName = 'Norbert' AND offering.OffTerm = 'SPRING' AND offering.OffYear = 2006;
#	5679	IS480	TTH	BLM412	15:30:00	CRISTOPHER COLAN
	5679	IS480	TTH	BLM412	15:30:00	CRISTOPHER COLAN
	9876	IS460	TTH	BLM307	13:30:00	LEONARD FIBON


